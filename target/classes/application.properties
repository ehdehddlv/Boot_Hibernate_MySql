
## DataSource 연결 정보
spring.profiles.include=dbsjh

#### Hibernate

# table 생성
spring.jpa.hibernate.ddl-auto=none
## create 		: 기존 테이블 삭제 후 다시 생성
## create-drop  : create와 같으나 application 종료 시점에 table drop
## update 		: 변경 된 부분만 적용
## validate		: 엔티티(VO)와 테이블이 정상적으로 맵핑(연결) 되었는지 확인
## none			: 사용하지 않을 때
## 개발시에는 편의를 위해 create, create-drop
## 운영시에는 update, validate, none

## VO 클래스의 멤버변수명이 자동으로 DB에 컬럼명과 연결 될 때
# regDate의 형태면 설정이 필요 (camel case)
# reg_date의 형태면 설정이 필요 없음 (snake case)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## JPA에 의해서 자동으로 생성되고 실행되는 SQL문을 실시간으로 출력하는 설정
logging.level.org.hibernate.sql=debug

## ?에 매핑되는 파라미터 값을 출력
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

## Hibernate가 실행한 SQL 출력
spring.jpa.show-sql=true

## Hibernate가 실행한 SQL 출력할 때 보기 쉽게 출력
spring.jpa.properties.hibernate.format_sql=true

## transaction 처리
spring.aop.proxy-target-class=true

##
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

## message
spring.messages.basename=message/message
spring.messages.encoding=UTF-8
spring.messages.use-code-as-default-message=true

#spring.messages.cache-duration=60

## File 저장경로
member.filePath=upload/member
board.notice.filePath=upload/notice
board.qna.filePath=upload/qna
 

